# Generated by Django 4.2.7 on 2025-08-22 10:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ExcelUpload",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="excel_uploads/")),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("processed", models.BooleanField(default=False)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="VaptResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vulnerability_id", models.CharField(max_length=50, unique=True)),
                ("vulnerability_name", models.CharField(max_length=300)),
                ("description", models.TextField()),
                (
                    "tested_environment",
                    models.CharField(
                        choices=[
                            ("PRODUCTION", "Production"),
                            ("STAGING", "Staging"),
                            ("DEVELOPMENT", "Development"),
                            ("UAT", "UAT"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "result",
                    models.CharField(
                        choices=[
                            ("PASS", "Pass"),
                            ("FAIL", "Fail"),
                            ("NOT_APPLICABLE", "Not Applicable"),
                            ("PARTIAL", "Partial"),
                        ],
                        max_length=20,
                    ),
                ),
                ("reporting_evidence", models.TextField()),
                ("source_of_identification", models.CharField(max_length=200)),
                (
                    "cvss_criticality",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        help_text="Criticality based on CVSS score",
                        max_length=20,
                    ),
                ),
                (
                    "business_criticality",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        help_text="Criticality based on business context",
                        max_length=20,
                    ),
                ),
                ("stakeholders", models.CharField(max_length=300)),
                ("stakeholder_remarks", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "excel_upload",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vapt_results",
                        to="vapt_core.excelupload",
                    ),
                ),
            ],
            options={
                "db_table": "vapt_results",
                "ordering": ["vulnerability_id"],
            },
        ),
        migrations.CreateModel(
            name="Scope",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("s_no", models.IntegerField()),
                ("penetration_testing", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("key_deliverables", models.TextField()),
                ("key_dependencies", models.TextField()),
                ("est_test_date", models.DateField(blank=True, null=True)),
                ("est_start_date", models.DateField(blank=True, null=True)),
                (
                    "testing_timeline",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "remediation_timeline",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("stakeholder", models.CharField(max_length=200)),
                (
                    "last_tested_year",
                    models.CharField(
                        blank=True,
                        choices=[("2024-25", "2024-25"), ("2025-26", "2025-26")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("requirement_statements", models.TextField()),
                (
                    "impact_of_tests",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "excel_upload",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scopes",
                        to="vapt_core.excelupload",
                    ),
                ),
            ],
            options={
                "db_table": "vapt_scope",
                "ordering": ["s_no"],
            },
        ),
        migrations.CreateModel(
            name="Proposal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("s_no", models.IntegerField()),
                ("domain", models.CharField(max_length=200)),
                (
                    "testing_scope_avenues",
                    models.TextField(
                        help_text="Different Avenues of the testing scope"
                    ),
                ),
                (
                    "methodology_overview",
                    models.TextField(help_text="Overview of the methodology"),
                ),
                ("key_deliverables", models.TextField()),
                ("key_dependencies", models.TextField()),
                ("est_test_date", models.DateField(blank=True, null=True)),
                ("est_start_date", models.DateField(blank=True, null=True)),
                (
                    "testing_timeline",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "remediation_timeline",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("stakeholder", models.CharField(max_length=200)),
                (
                    "last_tested_year",
                    models.CharField(
                        blank=True,
                        choices=[("2024-25", "2024-25"), ("2025-26", "2025-26")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("requirement_statements", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "excel_upload",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposals",
                        to="vapt_core.excelupload",
                    ),
                ),
            ],
            options={
                "db_table": "vapt_proposal",
                "ordering": ["s_no"],
            },
        ),
        migrations.CreateModel(
            name="KPIMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_proposals", models.IntegerField(default=0)),
                ("proposals_by_year", models.JSONField(default=dict)),
                ("total_scopes", models.IntegerField(default=0)),
                ("scopes_by_impact", models.JSONField(default=dict)),
                ("scopes_by_year", models.JSONField(default=dict)),
                ("total_vulnerabilities", models.IntegerField(default=0)),
                ("vulnerabilities_by_criticality", models.JSONField(default=dict)),
                ("vulnerabilities_by_environment", models.JSONField(default=dict)),
                ("vulnerabilities_by_result", models.JSONField(default=dict)),
                ("avg_testing_timeline", models.FloatField(blank=True, null=True)),
                ("avg_remediation_timeline", models.FloatField(blank=True, null=True)),
                ("calculated_at", models.DateTimeField(auto_now=True)),
                (
                    "excel_upload",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="kpi_metrics",
                        to="vapt_core.excelupload",
                    ),
                ),
            ],
            options={
                "db_table": "vapt_kpi_metrics",
            },
        ),
    ]
